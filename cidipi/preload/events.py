# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi import network, page
from cidipi.preload.types import *


class ruleSetUpdated(BaseModel):
    """
    Upsert. Currently, it is only emitted when a rule set added.
    """

    __domain__: str = PrivateAttr("Preload")
    ruleSet: "RuleSet"


class ruleSetRemoved(BaseModel):
    __domain__: str = PrivateAttr("Preload")
    id: "RuleSetId"


class preloadEnabledStateUpdated(BaseModel):
    """
    Fired when a preload enabled state is updated.
    """

    __domain__: str = PrivateAttr("Preload")
    disabledByPreference: bool
    disabledByDataSaver: bool
    disabledByBatterySaver: bool
    disabledByHoldbackPrefetchSpeculationRules: bool
    disabledByHoldbackPrerenderSpeculationRules: bool


class prefetchStatusUpdated(BaseModel):
    """
    Fired when a prefetch attempt is updated.
    """

    __domain__: str = PrivateAttr("Preload")
    key: "PreloadingAttemptKey"
    initiatingFrameId: page.FrameId
    """
    The frame id of the frame initiating prefetch.
    """
    prefetchUrl: str
    status: "PreloadingStatus"
    prefetchStatus: "PrefetchStatus"
    requestId: network.RequestId


class prerenderStatusUpdated(BaseModel):
    """
    Fired when a prerender attempt is updated.
    """

    __domain__: str = PrivateAttr("Preload")
    key: "PreloadingAttemptKey"
    status: "PreloadingStatus"
    prerenderStatus: Optional["PrerenderFinalStatus"]
    disallowedMojoInterface: Optional[str]
    """
    This is used to give users more information about the name of Mojo interface
that is incompatible with prerender and has caused the cancellation of the attempt.
    """
    mismatchedHeaders: Optional[list]


class preloadingAttemptSourcesUpdated(BaseModel):
    """
    Send a list of sources for all preloading attempts in a document.
    """

    __domain__: str = PrivateAttr("Preload")
    loaderId: network.LoaderId
    preloadingAttemptSources: list
