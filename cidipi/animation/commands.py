# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.animation.types import *


class disable(BaseModel):
    """
    Disables animation domain notifications.
    """

    __domain__: str = PrivateAttr("Animation")


class enable(BaseModel):
    """
    Enables animation domain notifications.
    """

    __domain__: str = PrivateAttr("Animation")


class getCurrentTime(BaseModel):
    """
    Returns the current time of the an animation.
    """

    __domain__: str = PrivateAttr("Animation")
    id: str
    """
    Id of animation.
    """


class getPlaybackRate(BaseModel):
    """
    Gets the playback rate of the document timeline.
    """

    __domain__: str = PrivateAttr("Animation")


class releaseAnimations(BaseModel):
    """
    Releases a set of animations to no longer be manipulated.
    """

    __domain__: str = PrivateAttr("Animation")
    animations: list
    """
    List of animation ids to seek.
    """


class resolveAnimation(BaseModel):
    """
    Gets the remote object of the Animation.
    """

    __domain__: str = PrivateAttr("Animation")
    animationId: str
    """
    Animation id.
    """


class seekAnimations(BaseModel):
    """
    Seek a set of animations to a particular time within each animation.
    """

    __domain__: str = PrivateAttr("Animation")
    animations: list
    """
    List of animation ids to seek.
    """
    currentTime: Union[float, int]
    """
    Set the current time of each animation.
    """


class setPaused(BaseModel):
    """
    Sets the paused state of a set of animations.
    """

    __domain__: str = PrivateAttr("Animation")
    animations: list
    """
    Animations to set the pause state of.
    """
    paused: bool
    """
    Paused state to set to.
    """


class setPlaybackRate(BaseModel):
    """
    Sets the playback rate of the document timeline.
    """

    __domain__: str = PrivateAttr("Animation")
    playbackRate: Union[float, int]
    """
    Playback rate for animations on page
    """


class setTiming(BaseModel):
    """
    Sets the timing of an animation node.
    """

    __domain__: str = PrivateAttr("Animation")
    animationId: str
    """
    Animation id.
    """
    duration: Union[float, int]
    """
    Duration of the animation.
    """
    delay: Union[float, int]
    """
    Delay of the animation.
    """
