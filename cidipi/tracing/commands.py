# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.tracing.types import *


class end(BaseModel):
    """
    Stop trace events collection.
    """

    __domain__: str = PrivateAttr("Tracing")


class getCategories(BaseModel):
    """
    Gets supported tracing categories.
    """

    __domain__: str = PrivateAttr("Tracing")


class recordClockSyncMarker(BaseModel):
    """
    Record a clock sync marker in the trace.
    """

    __domain__: str = PrivateAttr("Tracing")
    syncId: str
    """
    The ID of this clock sync marker
    """


class requestMemoryDump(BaseModel):
    """
    Request a global memory dump.
    """

    __domain__: str = PrivateAttr("Tracing")
    deterministic: Optional[bool]
    """
    Enables more deterministic results by forcing garbage collection
    """
    levelOfDetail: Optional["MemoryDumpLevelOfDetail"]
    """
    Specifies level of details in memory dump. Defaults to "detailed".
    """


class start(BaseModel):
    """
    Start trace events collection.
    """

    __domain__: str = PrivateAttr("Tracing")
    categories: Optional[str]
    """
    Category/tag filter
    """
    options: Optional[str]
    """
    Tracing options
    """
    bufferUsageReportingInterval: Optional[Union[float, int]]
    """
    If set, the agent will issue bufferUsage events at this interval, specified in milliseconds
    """
    transferMode: Optional[Literal["ReportEvents", "ReturnAsStream"]]
    """
    Whether to report trace events as series of dataCollected events or to save trace to a
stream (defaults to `ReportEvents`).
    """
    streamFormat: Optional["StreamFormat"]
    """
    Trace data format to use. This only applies when using `ReturnAsStream`
transfer mode (defaults to `json`).
    """
    streamCompression: Optional["StreamCompression"]
    """
    Compression format to use. This only applies when using `ReturnAsStream`
transfer mode (defaults to `none`)
    """
    traceConfig: Optional["TraceConfig"]
    perfettoConfig: Optional[str]
    """
    Base64-encoded serialized perfetto.protos.TraceConfig protobuf message
When specified, the parameters `categories`, `options`, `traceConfig`
are ignored. (Encoded as a base64 string when passed over JSON)
    """
    tracingBackend: Optional["TracingBackend"]
    """
    Backend type (defaults to `auto`)
    """
