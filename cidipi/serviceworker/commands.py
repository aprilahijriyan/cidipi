# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.serviceworker.types import *


class deliverPushMessage(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    origin: str
    registrationId: "RegistrationID"
    data: str


class disable(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")


class dispatchSyncEvent(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    origin: str
    registrationId: "RegistrationID"
    tag: str
    lastChance: bool


class dispatchPeriodicSyncEvent(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    origin: str
    registrationId: "RegistrationID"
    tag: str


class enable(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")


class inspectWorker(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    versionId: str


class setForceUpdateOnPageLoad(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    forceUpdateOnPageLoad: bool


class skipWaiting(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    scopeURL: str


class startWorker(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    scopeURL: str


class stopAllWorkers(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")


class stopWorker(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    versionId: str


class unregister(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    scopeURL: str


class updateRegistration(BaseModel):
    __domain__: str = PrivateAttr("ServiceWorker")
    scopeURL: str
