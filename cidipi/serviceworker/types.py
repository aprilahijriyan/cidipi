# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from enum import Enum
from typing import Optional, TypeVar, Union

from pydantic import BaseModel

from cidipi import target

RegistrationID = TypeVar("RegistrationID", bound=str)


class ServiceWorkerRegistration(BaseModel):
    """
    ServiceWorker registration.
    """

    registrationId: "RegistrationID"
    scopeURL: str
    isDeleted: bool


class ServiceWorkerVersionRunningStatus(str, Enum):
    stopped = "stopped"
    starting = "starting"
    running = "running"
    stopping = "stopping"


class ServiceWorkerVersionStatus(str, Enum):
    new = "new"
    installing = "installing"
    installed = "installed"
    activating = "activating"
    activated = "activated"
    redundant = "redundant"


class ServiceWorkerVersion(BaseModel):
    """
    ServiceWorker version.
    """

    versionId: str
    registrationId: "RegistrationID"
    scriptURL: str
    runningStatus: "ServiceWorkerVersionRunningStatus"
    status: "ServiceWorkerVersionStatus"
    scriptLastModified: Optional[Union[float, int]]
    """
    The Last-Modified header value of the main script.
    """
    scriptResponseTime: Optional[Union[float, int]]
    """
    The time at which the response headers of the main script were received from the server.
For cached script it is the last time the cache entry was validated.
    """
    controlledClients: Optional[list]
    targetId: Optional[target.TargetID]
    routerRules: Optional[str]


class ServiceWorkerErrorMessage(BaseModel):
    """
    ServiceWorker error message.
    """

    errorMessage: str
    registrationId: "RegistrationID"
    versionId: str
    sourceURL: str
    lineNumber: Union[float, int]
    columnNumber: Union[float, int]
