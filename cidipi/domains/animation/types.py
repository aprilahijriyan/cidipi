# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import Literal, Optional, Union

from pydantic import BaseModel

from cidipi.domains import dom


class Animation(BaseModel):
    """
    Animation instance.
    """

    id: str
    """
    `Animation`'s id.
    """
    name: str
    """
    `Animation`'s name.
    """
    pausedState: bool
    """
    `Animation`'s internal paused state.
    """
    playState: str
    """
    `Animation`'s play state.
    """
    playbackRate: Union[float, int]
    """
    `Animation`'s playback rate.
    """
    startTime: Union[float, int]
    """
    `Animation`'s start time.
Milliseconds for time based animations and
percentage [0 - 100] for scroll driven animations
(i.e. when viewOrScrollTimeline exists).
    """
    currentTime: Union[float, int]
    """
    `Animation`'s current time.
    """
    type: Literal["CSSTransition", "CSSAnimation", "WebAnimation"]
    """
    Animation type of `Animation`.
    """
    source: Optional["AnimationEffect"]
    """
    `Animation`'s source animation node.
    """
    cssId: Optional[str]
    """
    A unique ID for `Animation` representing the sources that triggered this CSS
animation/transition.
    """
    viewOrScrollTimeline: Optional["ViewOrScrollTimeline"]
    """
    View or scroll timeline
    """


class ViewOrScrollTimeline(BaseModel):
    """
    Timeline instance
    """

    sourceNodeId: Optional[dom.BackendNodeId]
    """
    Scroll container node
    """
    startOffset: Optional[Union[float, int]]
    """
    Represents the starting scroll position of the timeline
as a length offset in pixels from scroll origin.
    """
    endOffset: Optional[Union[float, int]]
    """
    Represents the ending scroll position of the timeline
as a length offset in pixels from scroll origin.
    """
    subjectNodeId: Optional[dom.BackendNodeId]
    """
    The element whose principal box's visibility in the
scrollport defined the progress of the timeline.
Does not exist for animations with ScrollTimeline
    """
    axis: dom.ScrollOrientation
    """
    Orientation of the scroll
    """


class AnimationEffect(BaseModel):
    """
    AnimationEffect instance
    """

    delay: Union[float, int]
    """
    `AnimationEffect`'s delay.
    """
    endDelay: Union[float, int]
    """
    `AnimationEffect`'s end delay.
    """
    iterationStart: Union[float, int]
    """
    `AnimationEffect`'s iteration start.
    """
    iterations: Union[float, int]
    """
    `AnimationEffect`'s iterations.
    """
    duration: Union[float, int]
    """
    `AnimationEffect`'s iteration duration.
Milliseconds for time based animations and
percentage [0 - 100] for scroll driven animations
(i.e. when viewOrScrollTimeline exists).
    """
    direction: str
    """
    `AnimationEffect`'s playback direction.
    """
    fill: str
    """
    `AnimationEffect`'s fill mode.
    """
    backendNodeId: Optional[dom.BackendNodeId]
    """
    `AnimationEffect`'s target node.
    """
    keyframesRule: Optional["KeyframesRule"]
    """
    `AnimationEffect`'s keyframes.
    """
    easing: str
    """
    `AnimationEffect`'s timing function.
    """


class KeyframesRule(BaseModel):
    """
    Keyframes Rule
    """

    name: Optional[str]
    """
    CSS keyframed animation's name.
    """
    keyframes: list
    """
    List of animation keyframes.
    """


class KeyframeStyle(BaseModel):
    """
    Keyframe Style
    """

    offset: str
    """
    Keyframe's time offset.
    """
    easing: str
    """
    `AnimationEffect`'s timing function.
    """
