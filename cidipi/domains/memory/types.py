# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from enum import Enum
from typing import Union

from pydantic import BaseModel


class PressureLevel(str, Enum):
    """
    Memory pressure level.
    """

    moderate = "moderate"
    critical = "critical"


class SamplingProfileNode(BaseModel):
    """
    Heap profile sample.
    """

    size: Union[float, int]
    """
    Size of the sampled allocation.
    """
    total: Union[float, int]
    """
    Total bytes attributed to this sample.
    """
    stack: list
    """
    Execution stack at the point of allocation.
    """


class SamplingProfile(BaseModel):
    """
    Array of heap profile samples.
    """

    samples: list
    modules: list


class Module(BaseModel):
    """
    Executable module information
    """

    name: str
    """
    Name of the module.
    """
    uuid: str
    """
    UUID of the module.
    """
    baseAddress: str
    """
    Base address where the module is loaded into memory. Encoded as a decimal
or hexadecimal (0x prefixed) string.
    """
    size: Union[float, int]
    """
    Size of the module in bytes.
    """
