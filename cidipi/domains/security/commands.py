# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.domains.security.types import *


class disable(BaseModel):
    """
    Disables tracking security state changes.
    """

    __domain__: str = PrivateAttr("Security")


class enable(BaseModel):
    """
    Enables tracking security state changes.
    """

    __domain__: str = PrivateAttr("Security")


class setIgnoreCertificateErrors(BaseModel):
    """
    Enable/disable whether all certificate errors should be ignored.
    """

    __domain__: str = PrivateAttr("Security")
    ignore: bool
    """
    If true, all certificate errors will be ignored.
    """


class handleCertificateError(BaseModel):
    """
    Handles a certificate error that fired a certificateError event.
    """

    __domain__: str = PrivateAttr("Security")
    eventId: Union[float, int]
    """
    The ID of the event.
    """
    action: "CertificateErrorAction"
    """
    The action to take on the certificate error.
    """


class setOverrideCertificateErrors(BaseModel):
    """
        Enable/disable overriding certificate errors. If enabled, all certificate error events need to
    be handled by the DevTools client and should be answered with `handleCertificateError` commands.
    """

    __domain__: str = PrivateAttr("Security")
    override: bool
    """
    If true, certificate errors will be overridden.
    """
