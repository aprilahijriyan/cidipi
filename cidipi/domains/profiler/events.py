# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.domains import debugger
from cidipi.domains.profiler.types import *


class consoleProfileFinished(BaseModel):
    __domain__: str = PrivateAttr("Profiler")
    id: str
    location: debugger.Location
    """
    Location of console.profileEnd().
    """
    profile: "Profile"
    title: Optional[str]
    """
    Profile title passed as an argument to console.profile().
    """


class consoleProfileStarted(BaseModel):
    """
    Sent when new profile recording is started using console.profile() call.
    """

    __domain__: str = PrivateAttr("Profiler")
    id: str
    location: debugger.Location
    """
    Location of console.profile().
    """
    title: Optional[str]
    """
    Profile title passed as an argument to console.profile().
    """


class preciseCoverageDeltaUpdate(BaseModel):
    """
        Reports coverage delta since the last poll (either from an event like this, or from
    `takePreciseCoverage` for the current isolate. May only be sent if precise code
    coverage has been started. This event can be trigged by the embedder to, for example,
    trigger collection of coverage data immediately at a certain point in time.
    """

    __domain__: str = PrivateAttr("Profiler")
    timestamp: Union[float, int]
    """
    Monotonically increasing time (in seconds) when the coverage update was taken in the backend.
    """
    occasion: str
    """
    Identifier for distinguishing coverage events.
    """
    result: list
    """
    Coverage data for the current isolate.
    """
