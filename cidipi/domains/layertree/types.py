# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import Literal, Optional, TypeVar, Union

from pydantic import BaseModel

from cidipi.domains import dom

LayerId = TypeVar("LayerId", bound=str)
"""
Unique Layer identifier.
"""

SnapshotId = TypeVar("SnapshotId", bound=str)
"""
Unique snapshot identifier.
"""


class ScrollRect(BaseModel):
    """
    Rectangle where scrolling happens on the main thread.
    """

    rect: dom.Rect
    """
    Rectangle itself.
    """
    type: Literal["RepaintsOnScroll", "TouchEventHandler", "WheelEventHandler"]
    """
    Reason for rectangle to force scrolling on the main thread
    """


class StickyPositionConstraint(BaseModel):
    """
    Sticky position constraints.
    """

    stickyBoxRect: dom.Rect
    """
    Layout rectangle of the sticky element before being shifted
    """
    containingBlockRect: dom.Rect
    """
    Layout rectangle of the containing block of the sticky element
    """
    nearestLayerShiftingStickyBox: Optional["LayerId"]
    """
    The nearest sticky layer that shifts the sticky box
    """
    nearestLayerShiftingContainingBlock: Optional["LayerId"]
    """
    The nearest sticky layer that shifts the containing block
    """


class PictureTile(BaseModel):
    """
    Serialized fragment of layer picture along with its offset within the layer.
    """

    x: Union[float, int]
    """
    Offset from owning layer left boundary
    """
    y: Union[float, int]
    """
    Offset from owning layer top boundary
    """
    picture: str
    """
    Base64-encoded snapshot data. (Encoded as a base64 string when passed over JSON)
    """


class Layer(BaseModel):
    """
    Information about a compositing layer.
    """

    layerId: "LayerId"
    """
    The unique id for this layer.
    """
    parentLayerId: Optional["LayerId"]
    """
    The id of parent (not present for root).
    """
    backendNodeId: Optional[dom.BackendNodeId]
    """
    The backend id for the node associated with this layer.
    """
    offsetX: Union[float, int]
    """
    Offset from parent layer, X coordinate.
    """
    offsetY: Union[float, int]
    """
    Offset from parent layer, Y coordinate.
    """
    width: Union[float, int]
    """
    Layer width.
    """
    height: Union[float, int]
    """
    Layer height.
    """
    transform: Optional[list]
    """
    Transformation matrix for layer, default is identity matrix
    """
    anchorX: Optional[Union[float, int]]
    """
    Transform anchor point X, absent if no transform specified
    """
    anchorY: Optional[Union[float, int]]
    """
    Transform anchor point Y, absent if no transform specified
    """
    anchorZ: Optional[Union[float, int]]
    """
    Transform anchor point Z, absent if no transform specified
    """
    paintCount: Union[float, int]
    """
    Indicates how many time this layer has painted.
    """
    drawsContent: bool
    """
    Indicates whether this layer hosts any content, rather than being used for
transform/scrolling purposes only.
    """
    invisible: Optional[bool]
    """
    Set if layer is not visible.
    """
    scrollRects: Optional[list]
    """
    Rectangles scrolling on main thread only.
    """
    stickyPositionConstraint: Optional["StickyPositionConstraint"]
    """
    Sticky position constraint information
    """


PaintProfile = TypeVar("PaintProfile", bound=list)
"""
Array of timings, one per paint step.
"""
