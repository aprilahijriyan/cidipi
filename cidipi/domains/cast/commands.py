# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.domains.cast.types import *


class enable(BaseModel):
    """
        Starts observing for sinks that can be used for tab mirroring, and if set,
    sinks compatible with |presentationUrl| as well. When sinks are found, a
    |sinksUpdated| event is fired.
    Also starts observing for issue messages. When an issue is added or removed,
    an |issueUpdated| event is fired.
    """

    __domain__: str = PrivateAttr("Cast")
    presentationUrl: Optional[str]


class disable(BaseModel):
    """
    Stops observing for sinks and issues.
    """

    __domain__: str = PrivateAttr("Cast")


class setSinkToUse(BaseModel):
    """
        Sets a sink to be used when the web page requests the browser to choose a
    sink via Presentation API, Remote Playback API, or Cast SDK.
    """

    __domain__: str = PrivateAttr("Cast")
    sinkName: str


class startDesktopMirroring(BaseModel):
    """
    Starts mirroring the desktop to the sink.
    """

    __domain__: str = PrivateAttr("Cast")
    sinkName: str


class startTabMirroring(BaseModel):
    """
    Starts mirroring the tab to the sink.
    """

    __domain__: str = PrivateAttr("Cast")
    sinkName: str


class stopCasting(BaseModel):
    """
    Stops the active Cast session on the sink.
    """

    __domain__: str = PrivateAttr("Cast")
    sinkName: str
