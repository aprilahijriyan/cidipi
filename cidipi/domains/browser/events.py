# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.domains import page
from cidipi.domains.browser.types import *


class downloadWillBegin(BaseModel):
    """
    Fired when page is about to start a download.
    """

    __domain__: str = PrivateAttr("Browser")
    frameId: page.FrameId
    """
    Id of the frame that caused the download to begin.
    """
    guid: str
    """
    Global unique identifier of the download.
    """
    url: str
    """
    URL of the resource being downloaded.
    """
    suggestedFilename: str
    """
    Suggested file name of the resource (the actual name of the file saved on disk may differ).
    """


class downloadProgress(BaseModel):
    """
    Fired when download makes progress. Last call has |done| == true.
    """

    __domain__: str = PrivateAttr("Browser")
    guid: str
    """
    Global unique identifier of the download.
    """
    totalBytes: Union[float, int]
    """
    Total expected bytes to download.
    """
    receivedBytes: Union[float, int]
    """
    Total bytes received.
    """
    state: Literal["inProgress", "completed", "canceled"]
    """
    Download status.
    """
