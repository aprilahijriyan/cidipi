# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import TypeVar, Union

from pydantic import BaseModel

from cidipi import runtime

HeapSnapshotObjectId = TypeVar("HeapSnapshotObjectId", bound=str)
"""
Heap snapshot object id.
"""


class SamplingHeapProfileNode(BaseModel):
    """
    Sampling Heap Profile node. Holds callsite information, allocation statistics and child nodes.
    """

    callFrame: runtime.CallFrame
    """
    Function location.
    """
    selfSize: Union[float, int]
    """
    Allocations size in bytes for the node excluding children.
    """
    id: Union[float, int]
    """
    Node id. Ids are unique across all profiles collected between startSampling and stopSampling.
    """
    children: list
    """
    Child nodes.
    """


class SamplingHeapProfileSample(BaseModel):
    """
    A single sample from a sampling profile.
    """

    size: Union[float, int]
    """
    Allocation size in bytes attributed to the sample.
    """
    nodeId: Union[float, int]
    """
    Id of the corresponding profile tree node.
    """
    ordinal: Union[float, int]
    """
    Time-ordered sample ordinal number. It is unique across all profiles retrieved
between startSampling and stopSampling.
    """


class SamplingHeapProfile(BaseModel):
    """
    Sampling profile.
    """

    head: "SamplingHeapProfileNode"
    samples: list
