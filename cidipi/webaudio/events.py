# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.webaudio.types import *


class contextCreated(BaseModel):
    """
    Notifies that a new BaseAudioContext has been created.
    """

    __domain__: str = PrivateAttr("WebAudio")
    context: "BaseAudioContext"


class contextWillBeDestroyed(BaseModel):
    """
    Notifies that an existing BaseAudioContext will be destroyed.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"


class contextChanged(BaseModel):
    """
    Notifies that existing BaseAudioContext has changed some properties (id stays the same)..
    """

    __domain__: str = PrivateAttr("WebAudio")
    context: "BaseAudioContext"


class audioListenerCreated(BaseModel):
    """
    Notifies that the construction of an AudioListener has finished.
    """

    __domain__: str = PrivateAttr("WebAudio")
    listener: "AudioListener"


class audioListenerWillBeDestroyed(BaseModel):
    """
    Notifies that a new AudioListener has been created.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    listenerId: "GraphObjectId"


class audioNodeCreated(BaseModel):
    """
    Notifies that a new AudioNode has been created.
    """

    __domain__: str = PrivateAttr("WebAudio")
    node: "AudioNode"


class audioNodeWillBeDestroyed(BaseModel):
    """
    Notifies that an existing AudioNode has been destroyed.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    nodeId: "GraphObjectId"


class audioParamCreated(BaseModel):
    """
    Notifies that a new AudioParam has been created.
    """

    __domain__: str = PrivateAttr("WebAudio")
    param: "AudioParam"


class audioParamWillBeDestroyed(BaseModel):
    """
    Notifies that an existing AudioParam has been destroyed.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    nodeId: "GraphObjectId"
    paramId: "GraphObjectId"


class nodesConnected(BaseModel):
    """
    Notifies that two AudioNodes are connected.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    sourceId: "GraphObjectId"
    destinationId: "GraphObjectId"
    sourceOutputIndex: Optional[Union[float, int]]
    destinationInputIndex: Optional[Union[float, int]]


class nodesDisconnected(BaseModel):
    """
    Notifies that AudioNodes are disconnected. The destination can be null, and it means all the outgoing connections from the source are disconnected.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    sourceId: "GraphObjectId"
    destinationId: "GraphObjectId"
    sourceOutputIndex: Optional[Union[float, int]]
    destinationInputIndex: Optional[Union[float, int]]


class nodeParamConnected(BaseModel):
    """
    Notifies that an AudioNode is connected to an AudioParam.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    sourceId: "GraphObjectId"
    destinationId: "GraphObjectId"
    sourceOutputIndex: Optional[Union[float, int]]


class nodeParamDisconnected(BaseModel):
    """
    Notifies that an AudioNode is disconnected to an AudioParam.
    """

    __domain__: str = PrivateAttr("WebAudio")
    contextId: "GraphObjectId"
    sourceId: "GraphObjectId"
    destinationId: "GraphObjectId"
    sourceOutputIndex: Optional[Union[float, int]]
