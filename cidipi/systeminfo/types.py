# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel


class GPUDevice(BaseModel):
    """
    Describes a single graphics processor (GPU).
    """

    vendorId: Union[float, int]
    """
    PCI ID of the GPU vendor, if available; 0 otherwise.
    """
    deviceId: Union[float, int]
    """
    PCI ID of the GPU device, if available; 0 otherwise.
    """
    subSysId: Optional[Union[float, int]]
    """
    Sub sys ID of the GPU, only available on Windows.
    """
    revision: Optional[Union[float, int]]
    """
    Revision of the GPU, only available on Windows.
    """
    vendorString: str
    """
    String description of the GPU vendor, if the PCI ID is not available.
    """
    deviceString: str
    """
    String description of the GPU device, if the PCI ID is not available.
    """
    driverVendor: str
    """
    String description of the GPU driver vendor.
    """
    driverVersion: str
    """
    String description of the GPU driver version.
    """


class Size(BaseModel):
    """
    Describes the width and height dimensions of an entity.
    """

    width: Union[float, int]
    """
    Width in pixels.
    """
    height: Union[float, int]
    """
    Height in pixels.
    """


class VideoDecodeAcceleratorCapability(BaseModel):
    """
        Describes a supported video decoding profile with its associated minimum and
    maximum resolutions.
    """

    profile: str
    """
    Video codec profile that is supported, e.g. VP9 Profile 2.
    """
    maxResolution: "Size"
    """
    Maximum video dimensions in pixels supported for this |profile|.
    """
    minResolution: "Size"
    """
    Minimum video dimensions in pixels supported for this |profile|.
    """


class VideoEncodeAcceleratorCapability(BaseModel):
    """
        Describes a supported video encoding profile with its associated maximum
    resolution and maximum framerate.
    """

    profile: str
    """
    Video codec profile that is supported, e.g H264 Main.
    """
    maxResolution: "Size"
    """
    Maximum video dimensions in pixels supported for this |profile|.
    """
    maxFramerateNumerator: Union[float, int]
    """
    Maximum encoding framerate in frames per second supported for this
|profile|, as fraction's numerator and denominator, e.g. 24/1 fps,
24000/1001 fps, etc.
    """
    maxFramerateDenominator: Union[float, int]


class SubsamplingFormat(str, Enum):
    """
    YUV subsampling type of the pixels of a given image.
    """

    yuv420 = "yuv420"
    yuv422 = "yuv422"
    yuv444 = "yuv444"


class ImageType(str, Enum):
    """
    Image format of a given image.
    """

    jpeg = "jpeg"
    webp = "webp"
    unknown = "unknown"


class ImageDecodeAcceleratorCapability(BaseModel):
    """
        Describes a supported image decoding profile with its associated minimum and
    maximum resolutions and subsampling.
    """

    imageType: "ImageType"
    """
    Image coded, e.g. Jpeg.
    """
    maxDimensions: "Size"
    """
    Maximum supported dimensions of the image in pixels.
    """
    minDimensions: "Size"
    """
    Minimum supported dimensions of the image in pixels.
    """
    subsamplings: list
    """
    Optional array of supported subsampling formats, e.g. 4:2:0, if known.
    """


class GPUInfo(BaseModel):
    """
    Provides information about the GPU(s) on the system.
    """

    devices: list
    """
    The graphics devices on the system. Element 0 is the primary GPU.
    """
    auxAttributes: Optional[dict]
    """
    An optional dictionary of additional GPU related attributes.
    """
    featureStatus: Optional[dict]
    """
    An optional dictionary of graphics features and their status.
    """
    driverBugWorkarounds: list
    """
    An optional array of GPU driver bug workarounds.
    """
    videoDecoding: list
    """
    Supported accelerated video decoding capabilities.
    """
    videoEncoding: list
    """
    Supported accelerated video encoding capabilities.
    """
    imageDecoding: list
    """
    Supported accelerated image decoding capabilities.
    """


class ProcessInfo(BaseModel):
    """
    Represents process info.
    """

    type: str
    """
    Specifies process type.
    """
    id: Union[float, int]
    """
    Specifies process id.
    """
    cpuTime: Union[float, int]
    """
    Specifies cumulative CPU usage in seconds across all threads of the
process since the process start.
    """
