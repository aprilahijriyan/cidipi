# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi.security.types import *


class certificateError(BaseModel):
    """
        There is a certificate error. If overriding certificate errors is enabled, then it should be
    handled with the `handleCertificateError` command. Note: this event does not fire if the
    certificate error has been allowed internally. Only one client per target should override
    certificate errors at the same time.
    """

    __domain__: str = PrivateAttr("Security")
    eventId: Union[float, int]
    """
    The ID of the event.
    """
    errorType: str
    """
    The type of the error.
    """
    requestURL: str
    """
    The url that was requested.
    """


class visibleSecurityStateChanged(BaseModel):
    """
    The security state of the page changed.
    """

    __domain__: str = PrivateAttr("Security")
    visibleSecurityState: "VisibleSecurityState"
    """
    Security state information about the page.
    """


class securityStateChanged(BaseModel):
    """
    The security state of the page changed. No longer being sent.
    """

    __domain__: str = PrivateAttr("Security")
    securityState: "SecurityState"
    """
    Security state.
    """
    schemeIsCryptographic: bool
    """
    True if the page was loaded over cryptographic transport such as HTTPS.
    """
    explanations: list
    """
    Previously a list of explanations for the security state. Now always
empty.
    """
    insecureContentStatus: "InsecureContentStatus"
    """
    Information about insecure content on the page.
    """
    summary: Optional[str]
    """
    Overrides user-visible description of the state. Always omitted.
    """
