# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from typing import *

from pydantic import BaseModel, PrivateAttr

from cidipi import dom
from cidipi.layertree.types import *


class compositingReasons(BaseModel):
    """
    Provides the reasons why the given layer was composited.
    """

    __domain__: str = PrivateAttr("LayerTree")
    layerId: "LayerId"
    """
    The id of the layer for which we want to get the reasons it was composited.
    """


class disable(BaseModel):
    """
    Disables compositing tree inspection.
    """

    __domain__: str = PrivateAttr("LayerTree")


class enable(BaseModel):
    """
    Enables compositing tree inspection.
    """

    __domain__: str = PrivateAttr("LayerTree")


class loadSnapshot(BaseModel):
    """
    Returns the snapshot identifier.
    """

    __domain__: str = PrivateAttr("LayerTree")
    tiles: list
    """
    An array of tiles composing the snapshot.
    """


class makeSnapshot(BaseModel):
    """
    Returns the layer snapshot identifier.
    """

    __domain__: str = PrivateAttr("LayerTree")
    layerId: "LayerId"
    """
    The id of the layer.
    """


class profileSnapshot(BaseModel):
    __domain__: str = PrivateAttr("LayerTree")
    snapshotId: "SnapshotId"
    """
    The id of the layer snapshot.
    """
    minRepeatCount: Optional[Union[float, int]]
    """
    The maximum number of times to replay the snapshot (1, if not specified).
    """
    minDuration: Optional[Union[float, int]]
    """
    The minimum duration (in seconds) to replay the snapshot.
    """
    clipRect: Optional[dom.Rect]
    """
    The clip rectangle to apply when replaying the snapshot.
    """


class releaseSnapshot(BaseModel):
    """
    Releases layer snapshot captured by the back-end.
    """

    __domain__: str = PrivateAttr("LayerTree")
    snapshotId: "SnapshotId"
    """
    The id of the layer snapshot.
    """


class replaySnapshot(BaseModel):
    """
    Replays the layer snapshot and returns the resulting bitmap.
    """

    __domain__: str = PrivateAttr("LayerTree")
    snapshotId: "SnapshotId"
    """
    The id of the layer snapshot.
    """
    fromStep: Optional[Union[float, int]]
    """
    The first step to replay from (replay from the very start if not specified).
    """
    toStep: Optional[Union[float, int]]
    """
    The last step to replay to (replay till the end if not specified).
    """
    scale: Optional[Union[float, int]]
    """
    The scale to apply while replaying (defaults to 1).
    """


class snapshotCommandLog(BaseModel):
    """
    Replays the layer snapshot and returns canvas log.
    """

    __domain__: str = PrivateAttr("LayerTree")
    snapshotId: "SnapshotId"
    """
    The id of the layer snapshot.
    """
