# AUTO-GENERATED By cidipi/tools/generator.py. DO NOT EDIT.

from enum import Enum

from pydantic import BaseModel

from cidipi import network, serviceworker


class ServiceName(str, Enum):
    """
        The Background Service that will be associated with the commands/events.
    Every Background Service operates independently, but they share the same
    API.
    """

    backgroundFetch = "backgroundFetch"
    backgroundSync = "backgroundSync"
    pushMessaging = "pushMessaging"
    notifications = "notifications"
    paymentHandler = "paymentHandler"
    periodicBackgroundSync = "periodicBackgroundSync"


class EventMetadata(BaseModel):
    """
    A key-value pair for additional event information to pass along.
    """

    key: str
    value: str


class BackgroundServiceEvent(BaseModel):
    timestamp: network.TimeSinceEpoch
    """
    Timestamp of the event (in seconds).
    """
    origin: str
    """
    The origin this event belongs to.
    """
    serviceWorkerRegistrationId: serviceworker.RegistrationID
    """
    The Service Worker ID that initiated the event.
    """
    service: "ServiceName"
    """
    The Background Service this event belongs to.
    """
    eventName: str
    """
    A description of the event.
    """
    instanceId: str
    """
    An identifier that groups related events together.
    """
    eventMetadata: list
    """
    A list of event-specific information.
    """
    storageKey: str
    """
    Storage key this event belongs to.
    """
